version: '3.8'

######Production Settings#####
# Frontend added
# User added to each container
# Restart Policy added
# Removed Queue Dashboard


services:

  frontend:
    build: ./frontend
    image: frontend
    container_name: brainns-frontend
    user: 1050:1050
    ports:
      - "5000:3000"
    command: node build 
    restart: unless-stopped

  api:
    build: ./backend
    image: app
    container_name: brainns-api
    user: 1050:988 
    ports:
      - 5001:5001
    volumes:
      - ./backend:/usr/src/app #local:container
      - ./image-repository:/usr/src/image-repository
      - /var/run/docker.sock:/var/run/docker.sock  # Bind the Docker socket
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1 # For prints
    depends_on:
        redis:
            condition: service_started
        mysqlDB:
            condition: service_healthy
    command: python app.py run -h 0.0.0.0 -p 5001
    restart: unless-stopped


  worker:
    image: app
    container_name: brainns-worker
    user: 1050:988
    volumes:
      - ./backend:/usr/src/app
      - ./image-repository:/usr/src/image-repository
      - ./models:/usr/src/models
      - /var/run/docker.sock:/var/run/docker.sock  # Bind the Docker socket
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1 # For prints
    depends_on:
      - redis
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all  # Access to all GPUs for availablity check
              capabilities: [gpu]
    command: python worker.py
    restart: unless-stopped


  redis:
    image: redis
    container_name: brainns-redis
    user: 1050:1050
    volumes:
      - ./redis-data:/data
    restart: unless-stopped


  mysqlDB:
    image: mysql:latest
    container_name: brainns-mysqlDB
    user: 1050:1050
    ports:
      - 3306:3306
    volumes:
      - ./db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: my_database
      MYSQL_USER: user
      MYSQL_PASSWORD: user_password
    healthcheck: # https://stackoverflow.com/questions/42567475/docker-compose-check-if-mysql-connection-is-ready
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 1s
      interval: 5s
      timeout: 5s
      retries: 55
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: brainns-phpmyadmin
    user: 1050:1050
    environment:
      PMA_HOST: mysqlDB
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - 8080:80
    depends_on:
      - mysqlDB
    restart: unless-stopped