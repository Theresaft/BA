version: '3.8'

services:

  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./frontend/build:/usr/share/nginx/html
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - api

  # frontend:
  #   build: ./frontend
  #   image: frontend
  #   container_name: brainns-frontend
  #   ports:
  #     - "5000:3000"
  #   command: node build 
  #   restart: unless-stopped

  # uptime-kuma:
  #   image: louislam/uptime-kuma:1
  #   container_name: uptime-kuma
  #   restart: always
  #   ports:
  #     - "3002:3001"
  #   volumes:
  #     - ./uptime-kuma-data:/app/data
  #     - /var/run/docker.sock:/var/run/docker.sock

  api:
    build: ./backend
    image: app
    container_name: brainns-api
    ports:
      - 5001:5001
    volumes:
      - ./backend:/usr/src/app #local:container
      - ./image-repository:/usr/src/image-repository
      - /var/run/docker.sock:/var/run/docker.sock  # Bind the Docker socket
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1 # For prints
    depends_on:
        redis:
            condition: service_started
        mysqlDB:
            condition: service_healthy 
    command: python app.py run -h 0.0.0.0 -p 5001

  worker:
    image: app
    container_name: brainns-worker
    volumes:
      - ./backend:/usr/src/app
      - ./image-repository:/usr/src/image-repository
      - ./models:/usr/src/models
      - ./preprocessing:/usr/src/preprocessing
      - /var/run/docker.sock:/var/run/docker.sock  # Bind the Docker socket
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1 # For prints
    depends_on:
      - redis
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all  # Access to all GPUs for availablity check
              capabilities: [gpu]
    command: python worker.py


  redis:
    image: redis
    container_name: brainns-redis
    volumes:
      - ./redis-data:/data


  dashboard:
    build: ./dashboard
    image: dashboard
    container_name: brainns-dashboard
    ports:
      - 9181:9181
    depends_on:
      - redis
    command: rq-dashboard --redis-url redis://redis:6379


  mysqlDB:
    image: mysql:latest
    container_name: brainns-mysqlDB
    ports:
      - 3306:3306
    volumes:
      - ./db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: my_database
      MYSQL_USER: user
      MYSQL_PASSWORD: user_password
    healthcheck: # https://stackoverflow.com/questions/42567475/docker-compose-check-if-mysql-connection-is-ready
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 1s
      interval: 5s
      timeout: 5s
      retries: 55
  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: brainns-phpmyadmin
    environment:
      PMA_HOST: mysqlDB
      MYSQL_ROOT_PASSWORD: root_password
      PMA_ABSOLUTE_URI: http://localhost/brainns-db
    ports:
      - 5080:80
    depends_on:
      - mysqlDB